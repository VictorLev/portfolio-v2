name: Deploy Nginx on DigitalOcean with Minikube

on:
  workflow_dispatch:
  push:
    paths:
      - "version.md"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install doctl
        run: |
          curl -sL https://github.com/digitalocean/doctl/releases/latest/download/doctl-$(uname -s)-$(uname -m) > doctl
          chmod +x doctl
          sudo mv doctl /usr/local/bin/
      - name: Authenticate with DigitalOcean
        env:
          DO_TOKEN: ${{ secrets.DO_TOKEN }}
        run: doctl auth init --access-token $DO_TOKEN

      - name: Get Droplet IP by Name
        id: get_ip
        run: |
          DROPLET_IP=$(doctl compute droplet list --format Name,PublicIPv4 | grep 'web-1' | awk '{print $2}')
          echo "Droplet IP: $DROPLET_IP"
          echo "DROPLET_IP=$DROPLET_IP" >> $GITHUB_ENV

      # - name: Deploy Minikube and Application
      #   env:
      #     SERVER_IP: ${{ env.DROPLET_IP }}
      #   run: |
      #     ssh -o StrictHostKeyChecking=no root@${SERVER_IP} <<EOF
      #     set -e
      #     # Start Minikube
      #     minikube start --driver=none

      #     # Copy application files to the server
      #     mkdir -p /deploy
      #     EOF

      #     # Copy code to droplet
      #     scp -r ./web root@${SERVER_IP}:/deploy/web
      #     scp -r ./minikube root@${SERVER_IP}:/deploy/minikube

      #     ssh -o StrictHostKeyChecking=no root@${SERVER_IP} <<EOF
      #     # Build Docker image
      #     docker build -t portfolio:latest /deploy/web

      #     # Load Docker image into Minikube
      #     minikube image load portfolio:latest

      #     # Apply Minikube YAML configurations
      #     kubectl apply -f /deploy/minikube/prometheus-pvc.yaml
      #     kubectl apply -f /deploy/minikube/nginx-config.yaml
      #     kubectl apply -f /deploy/minikube/monitoring-deployment.yaml
      #     kubectl apply -f /deploy/minikube/nginx-deployment.yaml

      #     # Wait for Nginx and Monitoring Pods
      #     kubectl wait --for=condition=Ready pod -l app=nginx --timeout=120s
      #     kubectl wait --for=condition=Ready pod -l app=monitoring --timeout=120s

      #     echo "Application successfully deployed!"
      #     EOF