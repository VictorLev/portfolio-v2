name: Deploy WebApp

on:
  workflow_dispatch:
  push:
    paths:
      - "version.md"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install doctl
        run: |
          cd ~
          wget https://github.com/digitalocean/doctl/releases/download/v1.120.1/doctl-1.120.1-linux-amd64.tar.gz
          tar xf ~/doctl-1.120.1-linux-amd64.tar.gz
          sudo mv ~/doctl /usr/local/bin
          doctl version  

      - name: Authenticate with DigitalOcean
        env:
          DO_TOKEN: ${{ secrets.DO_TOKEN }}
        run: |
          doctl auth init --access-token $DO_TOKEN

      - name: Get Droplet IP by Name
        id: get_ip
        run: |
          DROPLET_IP=$(doctl compute droplet list --format Name,PublicIPv4 | grep 'web-1' | awk '{print $2}')
          echo "Droplet IP: $DROPLET_IP"
          echo "DROPLET_IP=$DROPLET_IP" >> $GITHUB_ENV

      - name: Deploy Minikube and Application
        env:
          SERVER_IP: ${{ env.DROPLET_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Store the SSH key in a temporary file
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          # Copy code to droplet
          scp -r -i private_key.pem ./web root@${SERVER_IP}:/deploy/web
          scp -r -i private_key.pem ./minikube root@${SERVER_IP}:/deploy/minikube

          ssh -i private_key.pem -o StrictHostKeyChecking=no root@${SERVER_IP} <<EOF
            set -e
            # Start Minikube
            minikube start --driver=none

            # Build Docker image
            docker build -t portfolio:latest /deploy/web

            # Load Docker image into Minikube
            minikube image load portfolio:latest

            # Apply Minikube YAML configurations
            kubectl apply -f /deploy/minikube/prometheus-pvc.yaml
            kubectl apply -f /deploy/minikube/nginx-config.yaml
            kubectl apply -f /deploy/minikube/monitoring-deployment.yaml
            kubectl apply -f /deploy/minikube/nginx-deployment.yaml

            # Wait for Nginx and Monitoring Pods
            kubectl wait --for=condition=Ready pod -l app=nginx --timeout=120s
            kubectl wait --for=condition=Ready pod -l app=monitoring --timeout=120s

            echo "Application successfully deployed!"
          EOF